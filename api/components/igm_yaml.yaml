openapi: 3.0.0
info:
  title: Issue and Grievance Management (IGM) for ONDC
  description: ONDC Issue and Grievance Management (IGM)  API Specification
  version: 2.0.0
security:
  - SubscriberAuth: []
paths:
  /issue:
    post:
      tags:
        - Complaint lifecycle management
      description: |
        ###  Operation Description 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/Context"
                message:
                  type: object
                  properties:
                    issue:
                      $ref: "#/components/schemas/Issue"
              required:
                - context
                - message
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_issue:
    post:
      tags:
        - Complaint lifecycle management
      description: Send the issue resolution details object
      requestBody:
        description: Seller confirms order
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/Context"
                message:
                  type: object
                  properties:
                    issue:
                      $ref: "#/components/schemas/Issue"
                  required:
                    - issue
                error:
                  $ref: "#/components/schemas/Error"
              required:
                - context
                - message
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
 
 
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using Collector or Receiver subscriber''s signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    Ack:
      description: Describes the ACK response
      type: object
      properties:
        status:
          type: string
          description: 'Describe the status of the ACK response. If schema validation passes, status is ACK else it is NACK'
          enum:
            - ACK
            - NACK
    # Complainant:
      # description: |
      #   - Describes an entity that raises a complaint with an interfacing app. 
      #   - The complainant may be an end user (buyer or seller) or a network participant (buyer app/ seller app/ logistic services  provider app)
      # type: object
      # properties:
      #   person:
      #     $ref: "#/components/schemas/Person"
      #   contact:
      #     allOf:
      #       - $ref: "#/components/schemas/Contact"
      #       - type: object
      #         required:
      #         - phone
      # required:
      #   - contact
    
   
    Organization:
      type: object
      properties:
        contact: 
         $ref: "#/components/schemas/Contact"
        person:
          $ref: "#/components/schemas/Person"
    Issue:
      description: |
        *  Describes the Issue/complaint raised for a particular order, transaction or fulfillment or item for which an issue is faced by the buyer.
        * It also describes the Issue/complaint raised by the network participants to its conuter party or casacaded counterparty apps as and when applicable
        * Describes the issue when it is escalated as a Grievance or a Dispute
        *  supplementary Information  Describes and details evidence of the information about the issue . When the complainant or respondent seeks an issue update the addtional information about the update are populated as part of the supplementary information. 
          the supplementary information section , details information including but not limited to any of the following or more: 
            * comments from the complaintant/ respondent for seeking more information about the issue
            * comments from the complaintant/ respondent providing the update on the issue with more information on the issue 
            * Picutres providing further information about the issue
            * documents attachment/links providing further information about the issue etc
      type: object
      properties:
        id:
          description: |
            * Network issue identifier is an unique number assigned to any complaint by the interfacing application at the source.

            * **During the life cycle of a complaint, this number will not change and will be communicated to counterparty application.**

            * Any subsequent issues created with the interfacing,counterpary or casacaded counter party apps are responsible for providing the correalted and relevant network-issue-id which helps all this inteacting systems to traverse back to the main issue.
          type: string
        expected_response_time:
          $ref: "#/components/schemas/Time"
        expected_resolution_time:
          $ref: "#/components/schemas/Time"
        status:
          description: |
            ### Statues
              1. Open : indicating that the issue is opened and further action is yet to be taken on the issue
              2. Closed : indicating that the issue is closed and no further action/update/info/resolution action/status change are expected/accepted on this issue. 
          type: string
          enum:
             - OPEN
             - PROCESSING
             - RESOLVED
             - CLOSED
        level:
            description:  
              indicating the issue and grievance level 
            type: string
            enum: 
             - ISSUE
             - GRIEVANCE  
        created_at:
          description: timestamp for the creation of the issue
          type: string
          format: date-time
        updated_at:
          description: timestamp for the capturing the time an issue was last updated
          type: string
          format: date-time
        source_id:
          description: Describesabout the source id
          type: string 
        complainant_id:
         description: Describe about the complainant_id
         type: string
        respondent_id:
         description: Describes about the respondent_id
         type: array
        resolver_id:
         description: Describes about the respondent_id
         type: array 
        last_action_id:  
         description: Describes the last action id
         type: string
        actions:
          description:
           state the description of the action
          type: array
          $ref:  "#/components/schemas/Action"       
        description:
          description: 
            describes about description
          type: object
          properties:
            code:
              description: describes about code of the description
              type: string
            short_desc:
              description: describes about the short description
              type : string
            long_desc:
              description: describes about the long description
              type : string 
            # additional_desc:
            #   description: describes about the additional_desc
            #   $ref: "#/components/schemas/Additional_desc"
            image:  
             description: describes the image 
             type: array
        actor_info:
          description:
           state the description of the actor that are involve
          type: array
          $ref:  "#/components/schemas/Actor_info"
        refs:
           description:
            state the reference of the oreference
           type: array
           $ref:  "#/components/schemas/Refs"
    Action:
       type: object
       properties:
        id:
          description: Describes id of the action
          type: string 
        ref_id: 
          description: Describes the reference id 
          type: string
        ref_type:   
          description: Describes the refence type
          type: string
        description:
          type: string
          enum:
            - OPEN
            - PROCESSING
            - CLOSED
            - CASCADED
            - INFO_REQUESTED
            - INFO_PROCESSING
            - INFO_PROVIDED
            - INFO_NOT_AVAILABLE
            - RESOLUTION_PROPOSED
            - RESOLUTION_FORWARDED
            - RESOLUTION_PROCESSING
            - RESOLUTION_ACCEPTED
            - RESOLUTION_REJECTED
            - RESOLVED
        updated_at:
          description: timestamp for the capturing the time an issue status was last updated
          type: string
          format: date-time
        action_by:
          description: Describes the action_by
          type: string
        action_details:
          type: object
          properties:
            name:
              description: tells about the name 
              type: string
    Actor_info:
      type: object
      properties:
        id:
          description: Describes id of the actors that are thier
          type: string 
        type:  
           description: Describes the type of actor
           type: string 
        info:   
          description: Describes the information about actor
          type: object
          properties:
            org:
              description: Describes the information about actor
              type: object
              properties:
                name:
                  type: string
            contact:
              description: Describes the information about person
              $ref: "#/components/schemas/Contact"
            person:  
              description: Describes the information about person
              $ref: "#/components/schemas/Person"
    Contact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string          
    Person:
      description: Describes a person.
      type: object
      properties:
        name:
          type: string
          description: 'Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}'
          # pattern: '^\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$'
        Image:
         description: 'Image of an object. <br/><br/> A url based image will look like <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```'
         type: string
        dob:
          type: string
          format: date
        gender:
          type: string
          description: 'Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender'
        cred:
          type: string
    Time:
      description: Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations
      type: object
      properties:
        label:
          type: string
        timestamp:
          type: string
          format: date-time
        # duration:
        #   $ref: '#/components/schemas/Duration'
        range:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        days:
          type: string
          description: comma separated values representing days of the week
        # schedule:
        #   $ref: '#/components/schemas/Schedule'
    Context:
      description: Describes a beckn message context
      type: object
      properties:
        domain:
          type: string
        country:
          type: string
        city:
          type: string
        location:
         type: object
         properties:
           city:
            type: object
            properties:
              code:
                type: string
                description: defines code for city
           country:
              type: object
              properties:
                code:
                  type: string
                  description: defines code for city          
        action:
          type: string
          description: Defines the Beckn API call. Any actions other than the enumerated actions are not supported by Beckn Protocol
        core_version:
          type: string
          description: Version of Beckn core API specification being used
        version:
          type: string
          description: Version of Beckn core API specification being used  
        bap_id:
          type: string
          description: Unique id of the BAP. By default it is the fully qualified domain name of the BAP
        bap_uri:
          type: string
          format: uri
          description: URI of the BAP for accepting callbacks. Must have the same domain name as the bap_id
        bpp_id:
          type: string
          description: Unique id of the BPP. By default it is the fully qualified domain name of the BPP
        bpp_uri:
          type: string
          format: uri
          description: URI of the BPP. Must have the same domain name as the bap_id
        transaction_id:
          type: string
          description: This is a unique value which persists across all API calls from search through confirm
        message_id:
          type: string
          description: This is a unique value which persists during a request / callback cycle
        timestamp:
          type: string
          format: date-time
          description: Time of request generation in RFC3339 format
        key:
          type: string
          description: The encryption public key of the sender
        ttl:
          type: string
          description: The duration in ISO8601 format after timestamp for which this message holds valid
      required:
        - domain
        - action
        # - country
        # - city
        # - core_version
        # - version
        - transaction_id
        - message_id
        - bap_id
        - bap_uri
        - timestamp
        # - location
    Error:
      description: Describes an error object
      type: object
      properties:
        type:
          type: string
          enum:
            - CONTEXT-ERROR
            - CORE-ERROR
            - DOMAIN-ERROR
            - POLICY-ERROR
            - JSON-SCHEMA-ERROR 

    # REF_DETAILS:
    #    description: tells abot ref details
    #    type: 

    Refs:
      type: object
      properties:
        ref_id:
          description: tells abot ref id
          type: string
        ref_type:  
           description: tells abot ref type
           type: string
           enum:
            - ORDER
            - ITEM
            - FULFILMENT
            - TRANSACTION_ID
            - MESSAGE_ID
            - PROVIDER
            - ISSUE
            - ACTION
            - PAYMENT
            - CONSUMER
            - AGENT
        # ref_details:
        #   description: tells abot ref details
        #   type: array
        #   $ref: "#/components/schemas/"
          
    
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ONDC/ONDC-Protocol-IGM/1.0.0
    