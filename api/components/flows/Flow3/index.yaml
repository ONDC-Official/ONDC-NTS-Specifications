summary: Flow3 - Buyer raises a complaint for fulfilment category
details:
 - description: This flow provides an illustrative example workflow for the IGM framework where an end consumer (complainant) raises a complaint with regards to their fulfilment experience for their retail order. The seller app (on-network logistics buyer) analyses the complaint and feels the logistics seller app needs to be consulted for this complaint. The retail seller app creates a complaint to the logistics seller app with relevant information. Example illustrated here creates a new complaint (new issue_id) for the logistics transaction with an independent flow for the new complaint itself. In this case the seller app is expected to maintain the mapping of the complaint flows and ensure that in case disputes are raised for a complaint, they are able source/ provide the complete trail of the complaint. The seller app may choose to cascade the same "issue_id" or the same complaint as well and build the actions array inclusive of all actions in which case all actions taken by the logistics seller app are communicated as-is to the retail buyer app as well as status updates. The logistics seller app analyses the complaint and requires more images of the packaging received. The seller app cascades the same request to the buyer app and then the buyer provides the images required which is cascaded back to the logistics provider. The logistics provider then processes it and proposes a resolution. The cascaded resolution is accepted by the buyer after which the logistics provider resolves the complaint and the buyer closes the complaint
   mermaid: >-
    sequenceDiagram
        participant BuyerApp as Buyer App
        participant SellerApp as Seller App
        participant LSP as LSP (Logistics Service Provider)

        BuyerApp->>SellerApp: Raise complaint for fulfillment category (/issue)
        BuyerApp->>SellerApp: Create issue call (/issue)
        SellerApp->>BuyerApp: Respond with processing action (on_issue)
        SellerApp->>LSP: Create issue call (issue)
        LSP->>SellerApp: Respond with processing action (on_issue)
        LSP->>SellerApp: Needs more information to analyze (on_issue)
        SellerApp->>BuyerApp: Cascades request for more information (on_issue)
        BuyerApp->>SellerApp: Provides relevant information (issue)
        SellerApp->>LSP: Cascades with relevant information (issue)
        LSP->>SellerApp: Responds with processing action (on_issue)
        SellerApp->>BuyerApp: Cascades above processing action (on_issue)
        LSP->>SellerApp: Responds with proposed resolution (on_issue)
        SellerApp->>BuyerApp: Analyzes and cascades proposed response (on_issue)
        BuyerApp->>SellerApp: Accepts resolution provided by Seller App (issue)
        SellerApp->>LSP: Accepts resolution provided by LSP (issue)
        LSP->>SellerApp: Provides resolution object (on_issue)
        SellerApp->>BuyerApp: Provides resolution object (on_issue)
        BuyerApp->>SellerApp: Closes the complaint (issue)
        SellerApp->>BuyerApp: Closes the issue

steps:
  - summary: Buyer raises a complaint for fulfilment category; buyer app creates issue call
    api: issue
    details:
      - description: issue -Buyer raises a complaint for fulfilment category; buyer app creates issue call
        mermaid: >-
          
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue1.yaml"
  - summary:  Seller app responds with processing action
    api: on_issue
    details:
      - description: Seller app responds with processing action
        mermaid: >-
            
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue2.yaml"
  - summary: Seller app creates a issue call to the on-network lsp
    api: issue
    details:
      - description: Seller app creates a issue call to the on-network lsp
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue3.yaml"
  - summary: Lsp responds with processing action
    api: on_issueissue
    details:
      - description: on_issue
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue4.yaml"
  - summary: Seller app responds with processing action
    api: on_issue
    details:
      - description: Seller app responds with processing action
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue5.yaml"
  - summary: Seller app responds with need more info tagging the previous missing info
    api: on_issue
    details:
      - description: on_Issue -Seller app responds with need more info tagging the previous missing info
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue6.yaml"
  - summary:  Buyer app provides relevant information
    api: issue
    details:
      - description: Buyer app provides relevant information
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue7.yaml"
  - summary: Seller app cascades with the relevant information

    api: issue
    details:
      - description: issue -Seller app cascades with the relevant information
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue8.yaml"
  - summary: Lsp responds with processing action
    api: on_issue
    details:
      - description: Lsp responds with processing action
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue9.yaml"
  - summary:  Seller app cascades above processing action
    api: on_issue
    details:
      - description: on_issue - Seller app cascades above processing action
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue10.yaml"
  - summary: Lsp responds with a proposed resolution
    api: on_issue
    details:
      - description:  Lsp responds with a proposed resolution
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue11.yaml"
  - summary:  Seller app analyses the same and proposes a resolution
    api: on_issue
    details:
      - description:  Seller app analyses the same and proposes a resolution
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue12.yaml"
  - summary:  Buyer accepts the resolution provided by the seller app
    api: issue
    details:
      - description:  Buyer accepts the resolution provided by the seller app
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue13.yaml"
  - summary:  Seller app accepts the resolution provided by the lsp
    api: issue
    details:
      - description:  Seller app accepts the resolution provided by the lsp
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue14.yaml"
  - summary:  Lsp provides the resolution
    api: on_issue
    details:
      - description:  Lsp provides the resolution
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue15.yaml"
  - summary:  Seller app provides the resolution
    api: on_issue
    details:
      - description: Seller app provides the resolution
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/on_issue/on_issue16.yaml"
  - summary: Buyer app closes the complaint (issue)
    api: issue
    details:
      - description: issue - Buyer app closes the complaint (issue)
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue17.yaml"
  - summary:  Seller app closes the complaint
    api: issue
    details:
      - description:
        mermaid: >-
        reference: if any
    example:
      value:
        $ref: "../../examples/Flow3/issue/issue18.yaml"